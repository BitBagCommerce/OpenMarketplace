<?php

namespace ContainerMbsOYIQ;

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;
use Symfony\Component\DependencyInjection\Exception\RuntimeException;

/**
 * @internal This class has been auto-generated by the Symfony Dependency Injection Component.
 */
class getBitbag_MvmPlugin_Fixture_ExampleFactory_ProductDraftService extends App_KernelDevDebugContainer
{
    /**
     * Gets the public 'bitbag.mvm_plugin.fixture.example_factory.product_draft' shared service.
     *
     * @return \BitBag\SyliusMultiVendorMarketplacePlugin\Fixture\Factory\ProductDraftExampleFactory
     */
    public static function do($container, $lazyLoad = true)
    {
        include_once \dirname(__DIR__, 4).'/vendor/sylius/sylius/src/Sylius/Bundle/CoreBundle/Fixture/Factory/ExampleFactoryInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/sylius/sylius/src/Sylius/Bundle/CoreBundle/Fixture/Factory/AbstractExampleFactory.php';
        include_once \dirname(__DIR__, 4).'/src/Fixture/Factory/ProductDraftExampleFactory.php';
        include_once \dirname(__DIR__, 4).'/vendor/sylius/sylius/src/Sylius/Component/Product/Generator/SlugGeneratorInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/sylius/sylius/src/Sylius/Component/Product/Generator/SlugGenerator.php';
        include_once \dirname(__DIR__, 4).'/src/Factory/ProductDraftImageFactoryInterface.php';
        include_once \dirname(__DIR__, 4).'/src/Factory/ProductDraftImageFactory.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/config/FileLocatorInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/config/FileLocator.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/http-kernel/Config/FileLocator.php';

        return $container->services['bitbag.mvm_plugin.fixture.example_factory.product_draft'] = new \BitBag\SyliusMultiVendorMarketplacePlugin\Fixture\Factory\ProductDraftExampleFactory(($container->services['bitbag_mvm_plugin.factory.product_draft'] ?? ($container->services['bitbag_mvm_plugin.factory.product_draft'] = new \Sylius\Component\Resource\Factory\Factory('BitBag\\SyliusMultiVendorMarketplacePlugin\\Entity\\ProductListing\\ProductDraft'))), ($container->services['bitbag_mvm_plugin.factory.product_listing_price'] ?? ($container->services['bitbag_mvm_plugin.factory.product_listing_price'] = new \Sylius\Component\Resource\Factory\Factory('BitBag\\SyliusMultiVendorMarketplacePlugin\\Entity\\ProductListing\\ProductListingPrice'))), ($container->privates['bitbag_mvm_plugin.factory.product_listing_from_draft_factory'] ?? $container->load('getBitbagMvmPlugin_Factory_ProductListingFromDraftFactoryService')), ($container->services['bitbag_mvm_plugin.factory.product_translation'] ?? ($container->services['bitbag_mvm_plugin.factory.product_translation'] = new \Sylius\Component\Resource\Factory\Factory('BitBag\\SyliusMultiVendorMarketplacePlugin\\Entity\\ProductListing\\ProductTranslation'))), ($container->services['bitbag_mvm_plugin.repository.vendor'] ?? $container->load('getBitbagMvmPlugin_Repository_VendorService')), ($container->services['sylius.repository.channel'] ?? $container->getSylius_Repository_ChannelService()), ($container->services['sylius.repository.locale'] ?? $container->getSylius_Repository_LocaleService()), ($container->privates['bitbag_mvm_plugin.state_machine.product_draft.transition'] ?? $container->load('getBitbagMvmPlugin_StateMachine_ProductDraft_TransitionService')), ($container->services['sylius.generator.slug'] ?? ($container->services['sylius.generator.slug'] = new \Sylius\Component\Product\Generator\SlugGenerator())), ($container->services['sylius.image_uploader'] ?? $container->load('getSylius_ImageUploaderService')), ($container->privates['bitbag_mvm_plugin.factory.product_draft_image'] ?? ($container->privates['bitbag_mvm_plugin.factory.product_draft_image'] = new \BitBag\SyliusMultiVendorMarketplacePlugin\Factory\ProductDraftImageFactory())), ($container->privates['file_locator'] ?? ($container->privates['file_locator'] = new \Symfony\Component\HttpKernel\Config\FileLocator(($container->services['kernel'] ?? $container->get('kernel', 1))))));
    }
}
